<?xml version="1.0" encoding="utf-8" ?>
<!--nlog.config -> sağ tık -> Properties içerisinde "Copy To Output Directory default olarak 'Copy if newer' geliyor .Net 7'de.(Eğer dosya yeniyse kopyala)"-->
<!-- ******************** ÖNEMLİ ******************** -->
<!-- ******************** .Net 7 içerisinde Nlog database'e kayıt işleminin çalışabilmesi için öncelikle Manage Nuget Packages'ten; ********************
						   NLog.Database ve System.Data.SqlClient(Eğer Ms Sql ise) paketlerini yüklememiz gerekiyor.
-->
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Error"
      internalLogFile="c:\temp\internal-nlog-AspNetCore.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!--// fileName=loglamaların yazılacağı yerler.Layout=Loglamanın nasıl yazılacağını belirtiyoruz.(pattern).name="allFile" rule kısmında kullanılıyor.
		   fileName default olarak c:\temp içerisine atıyor halde gelir.biz burayı değiştiriyoruz ve root a yazdırıyoruz.-->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<!--<target xsi:type="File" name="allfile" fileName="c:\temp\nlog-AspNetCore-all-${shortdate}.log"-->
		<target xsi:type="File" name="allfile" fileName="nlog-AspNetCore-all-${shortdate}.log"
		layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" />
		<!-- Diğer txt dosyasına da sadece kendi loglarımız yazmak için. -->
		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<target xsi:type="File" name="ownFile-web" fileName="nlog-AspNetCore-own-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}" />

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<!--<target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />-->
		<target name="nlogDatabase" xsi:type="Database">
			<connectionString>Data Source=ALPERK\SQLSRV;Initial Catalog=NLogDB;User ID=sa;Password=********;Connect Timeout=30;</connectionString>
			<commandText>
				insert into dbo.Log (
				MachineName, Logged, Level, Message,
				Logger, Callsite, Exception
				) values (
				@MachineName, @Logged, @Level, @Message,
				@Logger, @Callsite, @Exception
				);
			</commandText>

			<parameter name="@MachineName" layout="${machinename}" />
			<parameter name="@Logged" layout="${date}" />
			<parameter name="@Level" layout="${level}" />
			<parameter name="@Message" layout="${message}" />
			<parameter name="@Logger" layout="${logger}" />
			<parameter name="@Callsite" layout="${callsite}" />
			<parameter name="@Exception" layout="${exception:tostring}" />
		</target>
	</targets>

	<!--Rules hangi seviyede hangi target'a yazılacağını belirtiyor-->
	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<!--Eğer appsettings.json veya appsettings.Development.json dosyası yoksa minLevel olarak alt satırdaki Trace'i dikkate alacak.Fakat burada da en yüksek seviye hangisindeyse onu dikkate alacak.Yani nlog.config'teki logger minLevel, appsettings'teki default değerden yüksek ise alt nlog.configtekini, eğer appsettingsteki Default değer nlog.configtekinden daha yüksek seviye ise appsettingstekini dikkate alacaktır.-->
		<!--<logger name="*" minlevel="Info" writeTo="allfile" />-->

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<!--Microsoft ve System.Net.Http ile başlayanları atla, sadece kendi loglarımı yaz.-->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<!--<logger name="System.Net.Http.*" maxlevel="Info" final="true" />-->

		<logger name="*" minlevel="Info" writeTo="ownFile-web" />
		<logger name="*" minlevel="Info" writeTo="database" />
		<logger name="*" minlevel="Debug" maxlevel="Error" final="true" writeTo="nlogDatabase" />
	</rules>
</nlog>